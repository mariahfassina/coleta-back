// src/pages/admin/LoginPage.js
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../../contexts/AuthContext'; // Importa o hook de autenticação
import { Helmet } from 'react-helmet-async';
import './Admin.css';

function LoginPage() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(false);
  
  const { login } = useAuth(); // Pega a função de login do contexto
  const navigate = useNavigate();

  const handleLogin = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError('');

    try {
      await login(email, password); // Usa a função de login do contexto
      navigate('/admin/dashboard'); // Redireciona em caso de sucesso
    } catch (err) {
      setError('Email ou senha inválidos. Tente novamente.');
      setLoading(false);
    }
  };

  return (
    <>
      <Helmet>
        <title>Login - Painel Administrativo</title>
      </Helmet>
      <div className="admin-page-background">
        <div className="login-container">
          <h2>Acesso Administrativo</h2>
          <form onSubmit={handleLogin}>
            <div className="form-group">
              <label htmlFor="email">Email</label>
              <input type="email" id="email" value={email} onChange={(e) => setEmail(e.target.value)} required />
            </div>
            <div className="form-group">
              <label htmlFor="password">Senha</label>
              <input type="password" id="password" value={password} onChange={(e) => setPassword(e.target.value)} required />
            </div>
            {error && <p className="error-message">{error}</p>}
            <button type="submit" className="btn-login" disabled={loading}>
              {loading ? 'Entrando...' : 'Entrar'}
            </button>
          </form>
        </div>
      </div>
    </>
  );
}

export default LoginPage;